services:
  # PostgreSQL Database
  postgres:
    image: postgres:alpine
    container_name: genje-postgres
    environment:
      POSTGRES_DB: genje
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: genje-api
    environment:
      GENJE_DATABASE_URL: postgresql://postgres:password@postgres:5432/genje
      GENJE_SERVER_HOST: 0.0.0.0
      GENJE_SERVER_PORT: 8080
      GENJE_LOGGING_LEVEL: info
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # News Fetcher Service
  fetcher:
    build:
      context: .
      dockerfile: Dockerfile.fetcher
    container_name: genje-fetcher
    environment:
      GENJE_DATABASE_URL: postgresql://postgres:password@postgres:5432/genje
      GENJE_FETCHER_FETCH_INTERVAL_MINUTES: 30
      GENJE_FETCHER_MAX_ARTICLES_PER_SOURCE: 50
      GENJE_FETCHER_CONCURRENT_FETCHES: 5
      GENJE_LOGGING_LEVEL: info
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: genje-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: genje-network 